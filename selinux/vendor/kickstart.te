# kickstart processes and scripts
type kickstart, domain;
type kickstart_exec, exec_type, file_type;

# kickstart_checker.sh talks to init over the property socket
set_prop(kickstart, radio_prop)

# Start /system/bin/qcks from init
init_daemon_domain(kickstart)

# Spawn /system/bin/efsks and /system/bin/ks
allow kickstart kickstart_exec:file { open execute_no_trans getattr };
allow kickstart rild_exec:file { open execute_no_trans getattr };

# Run dd on m9kefs[123] block devices; write to /data/qcks/
# Run cat on firmware and m9kefs[123] data; write to /data/qcks/
allow kickstart boot_block_device:blk_file { getattr read write open };

# Let qcks access /dev/mdm node (modem driver)
allow kickstart radio_device:chr_file rw_file_perms;

# Allow /dev/ttyUSB0 access
allow kickstart radio_device:chr_file { write ioctl getattr };

# Allow to run toolbox commands
allow kickstart shell_exec:file rx_file_perms;
# Toolbox commands for firmware dd
allow kickstart system_file:file execute_no_trans;
allow kickstart toolbox_exec:file getattr;
allow kickstart toolbox_exec:file { execute read open execute_no_trans};

# Access to /dev/block/platform/msm_sdcc.1/by-name/m9kefs2
allow kickstart block_device:dir { getattr write search };

allow kickstart shell_exec:file entrypoint;
# ls on /data/qcks/
allow kickstart self:capability { dac_override setuid };
allow kickstart tombstone_data_file:file { open write getattr read setattr };
allow kickstart tombstone_data_file:dir { search };

# XXX Label sysfs files with a specific type?
allow kickstart sysfs:file rw_file_perms;

allow kickstart unlabeled:file { setattr getattr read write open };
allow kickstart vfat:file { getattr read open };
allow kickstart kickstart:process { execmem };
allow kickstart usbfs:dir { search };
allow kickstart vfat:dir { search };
#allow kickstart log_device:chr_file { open write };
allow kickstart rild_exec:file { getattr execute read open };